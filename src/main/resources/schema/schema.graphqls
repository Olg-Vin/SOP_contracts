"""
Тип, представляющий пользователя.
"""
type User {
    """
    Уникальный идентификатор пользователя.
    """
    userId: ID

    """
    Имя пользователя.
    """
    name: String

    """
    Электронная почта пользователя.
    """
    email: String
}

"""
Тип, представляющий сообщение.
"""
type Message {
    """
    Уникальный идентификатор сообщения.
    """
    messageId: ID

    """
    Идентификатор пользователя, отправившего сообщение.
    """
    userId: ID

    """
    Категория сообщения (например, "Ожидает ответа", "Закрыто").
    """
    category: String

    """
    Тема сообщения.
    """
    subject: String

    """
    Приоритет сообщения.
    """
    priority: Int

    """
    Тело сообщения (основной текст).
    """
    body: String

    """
    Дата создания сообщения в формате ISO 8601.
    """
    createdAt: String

    """
    Статус сообщения (например, "Ожидает ответа", "Закрыто").
    """
    status: String
}

"""
Тип, представляющий ответ на сообщение.
"""
type Reply {
    """
    Уникальный идентификатор ответа.
    """
    replyId: ID

    """
    Идентификатор сообщения, на которое дается ответ.
    """
    messageId: ID

    """
    Тело ответа (основной текст ответа).
    """
    body: String

    """
    Дата создания ответа в формате ISO 8601.
    """
    createdAt: String

    """
    Ответственный за обработку ответа.
    """
    handler: String
}

"""
Входной тип для создания или обновления пользователя.
"""
input UserInput {
    """
    Имя пользователя.
    """
    name: String!

    """
    Электронная почта пользователя.
    """
    email: String!
}

"""
Входной тип для создания или обновления сообщения.
"""
input MessageInput {
    """
    Идентификатор пользователя, отправляющего сообщение.
    """
    userId: ID!

    """
    Основной текст сообщения.
    """
    body: String!

    """
    Тема сообщения.
    """
    subject: String
}

"""
Входной тип для создания или обновления ответа на сообщение.
"""
input ReplyInput {
    """
    Идентификатор сообщения, на которое дается ответ.
    """
    messageId: ID!

    """
    Основной текст ответа.
    """
    body: String!

    """
    Ответственный за обработку ответа.
    """
    handler: String!
}

"""
Запросы GraphQL.
"""
type Query {
    """
    Получить пользователя по ID.
    """
    getUser(id: ID): User

    """
    Получить список всех пользователей.
    """
    getUsers: [User]

    """
    Получить сообщение по ID.
    """
    getMessage(id: ID): Message

    """
    Получить ответ на сообщение по ID.
    """
    getReply(id: ID): Reply
}

"""
Мутации GraphQL для изменения данных.
"""
type Mutation {
    """
    Создать нового пользователя.
    """
    createUser(newUser: UserInput): User

    """
    Обновить данные пользователя по ID.
    """
    updateUser(id: ID, update: UserInput): User

    """
    Удалить пользователя по ID.
    """
    deleteUser(id: ID): Boolean

    """
    Создать новое сообщение.
    """
    createMessage(newMessage: MessageInput): Message

    """
    Обновить сообщение по ID.
    """
    updateMessage(id: ID, updateMessage: MessageInput): Message

    """
    Удалить сообщение по ID.
    """
    deleteMessage(id: ID): Boolean

    """
    Создать ответ на сообщение.
    """
    createReply(newReply: ReplyInput): Reply

    """
    Обновить ответ по ID.
    """
    updateReply(id: ID, newReply: ReplyInput): Reply

    """
    Удалить ответ по ID.
    """
    deleteReply(id: ID): Boolean
}
